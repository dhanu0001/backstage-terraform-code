version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.1
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@2.2.1
executors:
  node-executor:
    docker:
      - image: cimg/node:16.13.1

jobs:
  aws-setup:
    executor: aws-cli/default
    working_directory: ~/application
    steps:
      - aws-cli/setup:
          profile-name: default
      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/application
          # Must be relative path from root
          paths:
            - .
  build-migration-image:
    executor:
      name: aws-ecr/default
      use-docker-layer-caching: true
    working_directory: ~/application
    environment:
      ACCOUNT_URL: $account-id.dkr.ecr.$region.amazonaws.com
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - aws-ecr/build-and-push-image:
          account-url: ACCOUNT_URL
          dockerfile: Dockerfile
          profile-name: default
          region: AWS_DEFAULT_REGION
          repo: $repo
          tag: '${CIRCLE_BUILD_NUM}'
  run-migrations:
    executor: aws-cli/default
    working_directory: ~/application
    steps:
      - aws-cli/setup
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - aws-cli/setup:
          profile-name: default
      # - run:
      #     name: Executing migrations
      #     command: ./scripts/run-migrations.sh $env

workflows:
  version: 2
  build-deploy-master:
    jobs:
      - aws-setup:
          filters:
            branches:
              only:
                - master
          context: master
      - run-migrations:
          filters:
            branches:
              only:
                - master
          context: master
          requires:
            - aws-setup
            - build-migration-image
      - build-migration-image:
          filters:
            branches:
              only:
                - master
          context: master
          requires:
            - aws-setup